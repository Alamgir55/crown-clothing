{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\xampp\\\\htdocs\\\\crwn-clothing\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _objectSpread from\"C:\\\\xampp\\\\htdocs\\\\crwn-clothing\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import firebase from'firebase/app';import'firebase/firestore';import'firebase/auth';var config={apiKey:\"AIzaSyDnq3-chKvaquOGU_kIjAj7JAMxBdLKre0\",authDomain:\"crwn-db-64e9f.firebaseapp.com\",databaseURL:\"https://crwn-db-64e9f.firebaseio.com\",projectId:\"crwn-db-64e9f\",storageBucket:\"crwn-db-64e9f.appspot.com\",messagingSenderId:\"7023792399\",appId:\"1:7023792399:web:ad89acadfaa9c63fb96e7a\",measurementId:\"G-FRP7B7NFPR\"};firebase.initializeApp(config);export var createUserProfileDocument=function createUserProfileDocument(userAuth,additionalData){var userRef,snapShot,displayName,email,createdAt;return _regeneratorRuntime.async(function createUserProfileDocument$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userAuth){_context.next=2;break;}return _context.abrupt(\"return\");case 2:userRef=firestore.doc(\"users/\".concat(userAuth.uid));_context.next=5;return _regeneratorRuntime.awrap(userRef.get());case 5:snapShot=_context.sent;if(snapShot.exists){_context.next=17;break;}displayName=userAuth.displayName,email=userAuth.email;createdAt=new Date();_context.prev=9;_context.next=12;return _regeneratorRuntime.awrap(userRef.set(_objectSpread({displayName:displayName,email:email,createdAt:createdAt},additionalData)));case 12:_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](9);console.log('error creating user',_context.t0.message);case 17:return _context.abrupt(\"return\",userRef);case 18:case\"end\":return _context.stop();}}},null,null,[[9,14]]);};export var addCollectionAndDocuments=function addCollectionAndDocuments(collectionKey,objectToAdd){var collectionRef,batch;return _regeneratorRuntime.async(function addCollectionAndDocuments$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:collectionRef=firestore.collection(collectionKey);batch=firestore.batch();objectToAdd.forEach(function(obj){var newDocRef=collectionRef.doc();batch.set(newDocRef,obj);});return _context2.abrupt(\"return\",batch.commit());case 4:case\"end\":return _context2.stop();}}});};export var covertCollectionsSnapshotToMap=function covertCollectionsSnapshotToMap(collections){var transformedCollection=collections.docs.map(function(doc){var _doc$data=doc.data(),title=_doc$data.title,items=_doc$data.items;return{routeName:encodeURI(title.toLowerCase()),id:doc.id,title:title,items:items};});return transformedCollection.reduce(function(accumulator,collection){accumulator[collection.title.toLowerCase()]=collection;return accumulator;},{});};export var auth=firebase.auth();export var firestore=firebase.firestore();export var getCurrentUser=function getCurrentUser(userAuth){return new Promise(function(resolve,reject){var unsubcribe=auth.onAuthStateChanged(function(userAuth){unsubcribe();resolve(userAuth);},reject);});};export var googleProvider=new firebase.auth.GoogleAuthProvider();googleProvider.setCustomParameters({prompt:'select_account'});export var signInWithGoogle=function signInWithGoogle(){return auth.signInWithPopup(googleProvider);};export default firebase;","map":{"version":3,"sources":["C:/xampp/htdocs/crwn-clothing/client/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","get","snapShot","exists","displayName","email","createdAt","Date","set","console","log","message","addCollectionAndDocuments","collectionKey","objectToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","covertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","accumulator","auth","getCurrentUser","Promise","resolve","reject","unsubcribe","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n  apiKey: \"AIzaSyDnq3-chKvaquOGU_kIjAj7JAMxBdLKre0\",\n  authDomain: \"crwn-db-64e9f.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-64e9f.firebaseio.com\",\n  projectId: \"crwn-db-64e9f\",\n  storageBucket: \"crwn-db-64e9f.appspot.com\",\n  messagingSenderId: \"7023792399\",\n  appId: \"1:7023792399:web:ad89acadfaa9c63fb96e7a\",\n  measurementId: \"G-FRP7B7NFPR\"\n};\n\nfirebase.initializeApp(config);\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\n\nexport const addCollectionAndDocuments = async (collectionKey, objectToAdd) => {\n  const collectionRef = firestore.collection(collectionKey)\n  const batch = firestore.batch();\n\n  objectToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj)\n  })\n  return batch.commit();\n}\n\nexport const covertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const { title, items } = doc.data();\n\n      return {\n        routeName: encodeURI(title.toLowerCase()),\n        id: doc.id,\n        title,\n        items\n      }\n  });\n\n  return  transformedCollection.reduce((accumulator, collection) => {\n      accumulator[collection.title.toLowerCase()] = collection;\n      return accumulator;\n    }, {});\n}\n\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n\nexport const getCurrentUser = userAuth => {\n  return new Promise((resolve, reject) => {\n    const unsubcribe = auth.onAuthStateChanged(userAuth => {\n        unsubcribe();\n        resolve(userAuth);\n    }, reject);\n  })\n}\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}