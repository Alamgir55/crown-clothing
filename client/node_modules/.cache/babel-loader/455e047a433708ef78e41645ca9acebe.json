{"ast":null,"code":"import _defineProperty from\"C:\\\\xampp\\\\htdocs\\\\crwn-clothing\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\xampp\\\\htdocs\\\\crwn-clothing\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"C:\\\\xampp\\\\htdocs\\\\crwn-clothing\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _slicedToArray from\"C:\\\\xampp\\\\htdocs\\\\crwn-clothing\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{connect}from'react-redux';import FormInput from'../form-input/form-input.component';import CustomButton from'../custom-button/custom-button.component';import{googleSignInStart as _googleSignInStart,emailSignInStart as _emailSignInStart}from'../../redux/user/user.actions';import{SignInContainer,SignInTitle,ButtonsBarContainer}from'./sign-in.styles';var SignIn=function SignIn(_ref){var emailSignInStart=_ref.emailSignInStart,googleSignInStart=_ref.googleSignInStart;var _useState=useState({email:'',password:''}),_useState2=_slicedToArray(_useState,2),userCredentials=_useState2[0],setUserCredentials=_useState2[1];var email=userCredentials.email,password=userCredentials.password;var handleSubmit=function handleSubmit(event){return _regeneratorRuntime.async(function handleSubmit$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();emailSignInStart(email,password);case 2:case\"end\":return _context.stop();}}});};var handleChange=function handleChange(event){var _event$target=event.target,value=_event$target.value,name=_event$target.name;setUserCredentials(_objectSpread({},userCredentials,_defineProperty({},name,value)));};return React.createElement(SignInContainer,null,React.createElement(SignInTitle,null,\"I already have an account\"),React.createElement(\"span\",null,\"Sign in with your email and password\"),React.createElement(\"form\",{onSubmit:handleSubmit},React.createElement(FormInput,{name:\"email\",type:\"email\",handleChange:handleChange,value:email,label:\"email\",required:true}),React.createElement(FormInput,{name:\"password\",type:\"password\",value:password,handleChange:handleChange,label:\"password\",required:true}),React.createElement(ButtonsBarContainer,null,React.createElement(CustomButton,{type:\"submit\"},\" Sign in \"),React.createElement(CustomButton,{type:\"button\",onClick:googleSignInStart,isGoogleSignIn:true},\"Sign in with Google\"))));};var mapDispatchToProps=function mapDispatchToProps(display){return{googleSignInStart:function googleSignInStart(){return display(_googleSignInStart());},emailSignInStart:function emailSignInStart(email,password){return display(_emailSignInStart({email:email,password:password}));}};};export default connect(null,mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/xampp/htdocs/crwn-clothing/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignInContainer","SignInTitle","ButtonsBarContainer","SignIn","email","password","userCredentials","setUserCredentials","handleSubmit","event","preventDefault","handleChange","target","value","name","mapDispatchToProps","display"],"mappings":"gfAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,oCAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,0CAAzB,CAEA,OAASC,iBAAiB,GAAjBA,CAAAA,kBAAT,CAA4BC,gBAAgB,GAAhBA,CAAAA,iBAA5B,KAAoD,+BAApD,CAEA,OACEC,eADF,CAEEC,WAFF,CAGEC,mBAHF,KAIO,kBAJP,CAMA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAA2C,IAAzCJ,CAAAA,gBAAyC,MAAzCA,gBAAyC,CAAvBD,iBAAuB,MAAvBA,iBAAuB,eACVJ,QAAQ,CAAC,CAACU,KAAK,CAAE,EAAR,CAAYC,QAAQ,CAAE,EAAtB,CAAD,CADE,wCACjDC,eADiD,eAChCC,kBADgC,kBAGhDH,CAAAA,KAHgD,CAG5BE,eAH4B,CAGhDF,KAHgD,CAGzCC,QAHyC,CAG5BC,eAH4B,CAGzCD,QAHyC,CAKxD,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAMC,KAAN,wHACnBA,KAAK,CAACC,cAAN,GAEAX,gBAAgB,CAACK,KAAD,CAAQC,QAAR,CAAhB,CAHmB,8CAArB,CAMA,GAAMM,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAF,KAAK,CAAI,mBACJA,KAAK,CAACG,MADF,CACpBC,KADoB,eACpBA,KADoB,CACbC,IADa,eACbA,IADa,CAG5BP,kBAAkB,kBAAKD,eAAL,oBAAuBQ,IAAvB,CAA8BD,KAA9B,GAAlB,CACD,CAJD,CAME,MACE,qBAAC,eAAD,MACE,oBAAC,WAAD,kCADF,CAEE,uEAFF,CAIE,4BAAM,QAAQ,CAAEL,YAAhB,EACE,oBAAC,SAAD,EACE,IAAI,CAAC,OADP,CAEE,IAAI,CAAC,OAFP,CAGE,YAAY,CAAEG,YAHhB,CAIE,KAAK,CAAEP,KAJT,CAKE,KAAK,CAAC,OALR,CAME,QAAQ,KANV,EADF,CASE,oBAAC,SAAD,EACE,IAAI,CAAC,UADP,CAEE,IAAI,CAAC,UAFP,CAGE,KAAK,CAAEC,QAHT,CAIE,YAAY,CAAEM,YAJhB,CAKE,KAAK,CAAC,UALR,CAME,QAAQ,KANV,EATF,CAiBE,oBAAC,mBAAD,MACE,oBAAC,YAAD,EAAc,IAAI,CAAC,QAAnB,cADF,CAEE,oBAAC,YAAD,EAAc,IAAI,CAAC,QAAnB,CAA4B,OAAO,CAAEb,iBAArC,CAAwD,cAAc,KAAtE,wBAFF,CAjBF,CAJF,CADF,CA+BH,CAhDD,CAkDA,GAAMiB,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,OAAO,QAAI,CACpClB,iBAAiB,CAAE,mCAAMkB,CAAAA,OAAO,CAAClB,kBAAiB,EAAlB,CAAb,EADiB,CAEpCC,gBAAgB,CAAE,0BAACK,KAAD,CAAQC,QAAR,QAAqBW,CAAAA,OAAO,CAACjB,iBAAgB,CAAC,CAACK,KAAK,CAALA,KAAD,CAAQC,QAAQ,CAARA,QAAR,CAAD,CAAjB,CAA5B,EAFkB,CAAJ,EAAlC,CAKA,cAAeV,CAAAA,OAAO,CAAC,IAAD,CAAOoB,kBAAP,CAAP,CAAkCZ,MAAlC,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport {connect} from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nimport {\n  SignInContainer,\n  SignInTitle,\n  ButtonsBarContainer\n} from './sign-in.styles';\n\nconst SignIn = ({emailSignInStart, googleSignInStart}) => {\n  const [userCredentials, setUserCredentials] = useState({email: '', password: ''})\n  \n  const { email, password } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const { value, name } = event.target;\n\n    setUserCredentials({...userCredentials, [name]: value });\n  };\n \n    return (\n      <SignInContainer>\n        <SignInTitle>I already have an account</SignInTitle>\n        <span>Sign in with your email and password</span>\n\n        <form onSubmit={handleSubmit}>\n          <FormInput\n            name='email'\n            type='email'\n            handleChange={handleChange}\n            value={email}\n            label='email'\n            required\n          />\n          <FormInput\n            name='password'\n            type='password'\n            value={password}\n            handleChange={handleChange}\n            label='password'\n            required\n          />\n          <ButtonsBarContainer>\n            <CustomButton type='submit'> Sign in </CustomButton>\n            <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>\n              Sign in with Google\n            </CustomButton>\n          </ButtonsBarContainer>\n        </form>\n      </SignInContainer>\n    );\n}\n\nconst mapDispatchToProps = display =>({\n  googleSignInStart: () => display(googleSignInStart()),\n  emailSignInStart: (email, password) => display(emailSignInStart({email, password}))\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}