{"ast":null,"code":"import shopActionTypes from './shop.types';\nimport { firestore, covertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFaliur = errorMessage => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_FAILUR,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAysc = function () {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionMap = covertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionMap));\n    }).catch(error => dispatch(fetchCollectionsFaliur(error.message)));\n  };\n};","map":{"version":3,"sources":["C:/xampp/htdocs/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["shopActionTypes","firestore","covertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFaliur","errorMessage","FETCH_COLLECTIONS_FAILUR","fetchCollectionsStartAysc","dispatch","collectionRef","collection","get","then","snapshot","collectionMap","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,+BAA1D;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADkB,CAAP,CAA9B;AAGP,OAAO,MAAMC,uBAAuB,GAAIC,cAAD,KAAoB;AACvDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADiC;AAEvDC,EAAAA,OAAO,EAAEF;AAF8C,CAApB,CAAhC;AAKP,OAAO,MAAMG,sBAAsB,GAAGC,YAAY,KAAK;AACnDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,wBAD6B;AAEnDH,EAAAA,OAAO,EAAEE;AAF0C,CAAL,CAA3C;AAKP,OAAO,MAAME,yBAAyB,GAAG,YAAU;AAC/C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEJY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACnC,YAAMC,aAAa,GAAGlB,8BAA8B,CAACiB,QAAD,CAApD;AACEL,MAAAA,QAAQ,CAACR,uBAAuB,CAACc,aAAD,CAAxB,CAAR;AACH,KAHD,EAGGC,KAHH,CAGSC,KAAK,IAAIR,QAAQ,CAACJ,sBAAsB,CAACY,KAAK,CAACC,OAAP,CAAvB,CAH1B;AAIC,GARD;AASH,CAVM","sourcesContent":["import shopActionTypes from './shop.types';\r\n\r\nimport { firestore, covertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n    type: shopActionTypes.FETCH_COLLECTIONS_START\r\n})\r\nexport const fetchCollectionsSuccess = (collectionsMap) =>({ \r\n    type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n    payload: collectionsMap \r\n})\r\n\r\nexport const fetchCollectionsFaliur = errorMessage => ({\r\n    type: shopActionTypes.FETCH_COLLECTIONS_FAILUR,\r\n    payload: errorMessage\r\n})\r\n\r\nexport const fetchCollectionsStartAysc = function(){\r\n    return dispatch => {\r\n        const collectionRef = firestore.collection('collections');\r\n        dispatch(fetchCollectionsStart());\r\n\r\n    collectionRef.get().then(snapshot => {\r\n      const collectionMap = covertCollectionsSnapshotToMap(snapshot)\r\n        dispatch(fetchCollectionsSuccess(collectionMap));\r\n    }).catch(error => dispatch(fetchCollectionsFaliur(error.message)));\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}