{"ast":null,"code":"import _objectSpread from \"C:\\\\xampp\\\\htdocs\\\\crwn-clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyDnq3-chKvaquOGU_kIjAj7JAMxBdLKre0\",\n  authDomain: \"crwn-db-64e9f.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-64e9f.firebaseio.com\",\n  projectId: \"crwn-db-64e9f\",\n  storageBucket: \"crwn-db-64e9f.appspot.com\",\n  messagingSenderId: \"7023792399\",\n  appId: \"1:7023792399:web:ad89acadfaa9c63fb96e7a\",\n  measurementId: \"G-FRP7B7NFPR\"\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additionalData));\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return batch.commit();\n};\n\nconst collectionArrayToObject = collections => {\n  const trans = collections.doc.map(doc => {\n    const _doc$data = doc.data(),\n          title = _doc$data.title,\n          item = _doc$data.item;\n\n    return {\n      routeName: encodeURI(title),\n      id: doc.id,\n      title,\n      item\n    };\n  });\n  console.log(trans);\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/xampp/htdocs/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionAndDocuments","collectionKey","objectToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","collectionArrayToObject","collections","trans","map","data","title","item","routeName","encodeURI","id","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n  apiKey: \"AIzaSyDnq3-chKvaquOGU_kIjAj7JAMxBdLKre0\",\n  authDomain: \"crwn-db-64e9f.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-64e9f.firebaseio.com\",\n  projectId: \"crwn-db-64e9f\",\n  storageBucket: \"crwn-db-64e9f.appspot.com\",\n  messagingSenderId: \"7023792399\",\n  appId: \"1:7023792399:web:ad89acadfaa9c63fb96e7a\",\n  measurementId: \"G-FRP7B7NFPR\"\n};\n\nfirebase.initializeApp(config);\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\n\nexport const addCollectionAndDocuments = async (collectionKey, objectToAdd) => {\n  const collectionRef = firestore.collection(collectionKey)\n  const batch = firestore.batch();\n\n  objectToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj)\n  })\n  return batch.commit();\n}\n\nconst collectionArrayToObject = collections => {\n  const trans = collections.doc.map(doc => {\n    const { title, item } = doc.data();\n\n      return {\n        routeName: encodeURI(title),\n        id: doc.id,\n        title,\n        item\n      }\n  });\n  console.log(trans);\n}\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}