{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\crwn-clothing\\\\src\\\\pages\\\\collection\\\\collection.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport CollectionItem from '../../components/collection-item/collection-item.component';\nimport { selectCollection } from '../../redux/shop/shop.selectors';\nimport { firestore } from '../../firebase/firebase.utils';\nimport { CollectionPageContainer, CollectionTitle, CollectionItemsContainer } from './collection.styles';\n\nconst CollectionPage = ({\n  collection\n}) => {\n  const title = collection.title,\n        items = collection.items;\n  useEffect(() => {\n    console.log('user subcribing..6555555555555555554666666666666666666666666666666666666');\n    const unsubcribing = firestore.collection('collections').onSnapshot(snapshot => console.log('sone55555555555555555555555'));\n    return () => {\n      console.log('user unsubcribing');\n      unsubcribing();\n    };\n  });\n  return React.createElement(CollectionPageContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(CollectionTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, title), React.createElement(CollectionItemsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, items.map(item => React.createElement(CollectionItem, {\n    key: item.id,\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);","map":{"version":3,"sources":["C:/xampp/htdocs/crwn-clothing/src/pages/collection/collection.component.jsx"],"names":["React","useEffect","connect","CollectionItem","selectCollection","firestore","CollectionPageContainer","CollectionTitle","CollectionItemsContainer","CollectionPage","collection","title","items","console","log","unsubcribing","onSnapshot","snapshot","map","item","id","mapStateToProps","state","ownProps","match","params","collectionId"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,cAAP,MAA2B,4DAA3B;AAEA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,SAASC,SAAT,QAA0B,+BAA1B;AAEA,SACEC,uBADF,EAEEC,eAFF,EAGEC,wBAHF,QAIO,qBAJP;;AAMA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAAA,QACjCC,KADiC,GAChBD,UADgB,CACjCC,KADiC;AAAA,QAC1BC,KAD0B,GAChBF,UADgB,CAC1BE,KAD0B;AAEzCX,EAAAA,SAAS,CAAC,MAAK;AACbY,IAAAA,OAAO,CAACC,GAAR,CAAY,0EAAZ;AACA,UAAMC,YAAY,GAAGV,SAAS,CAACK,UAAV,CAAqB,aAArB,EAAoCM,UAApC,CAAgDC,QAAD,IAAcJ,OAAO,CAACC,GAAR,CAAY,6BAAZ,CAA7D,CAArB;AAEA,WAAO,MAAM;AACXD,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAC,MAAAA,YAAY;AACb,KAHD;AAID,GARQ,CAAT;AAUA,SACE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBJ,KAAlB,CADF,EAEE,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACM,GAAN,CAAUC,IAAI,IACb,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAA8B,IAAA,IAAI,EAAED,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,CADF;AAUD,CAtBD;;AAwBA,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC5Cb,EAAAA,UAAU,EAAEN,gBAAgB,CAACmB,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBC,YAAvB,CAAhB,CAAqDJ,KAArD;AADgC,CAAtB,CAAxB;;AAIA,eAAepB,OAAO,CAACmB,eAAD,CAAP,CAAyBZ,cAAzB,CAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport { connect } from 'react-redux';\n\nimport CollectionItem from '../../components/collection-item/collection-item.component';\n\nimport { selectCollection } from '../../redux/shop/shop.selectors';\nimport { firestore } from '../../firebase/firebase.utils'; \n\nimport {\n  CollectionPageContainer,\n  CollectionTitle,\n  CollectionItemsContainer\n} from './collection.styles';\n\nconst CollectionPage = ({ collection }) => {\n  const { title, items } = collection;\n  useEffect(()=> {\n    console.log('user subcribing..6555555555555555554666666666666666666666666666666666666');\n    const unsubcribing = firestore.collection('collections').onSnapshot((snapshot) => console.log('sone55555555555555555555555'));\n\n    return () => {\n      console.log('user unsubcribing');\n      unsubcribing();\n    };\n  })\n\n  return (\n    <CollectionPageContainer>\n      <CollectionTitle>{title}</CollectionTitle>\n      <CollectionItemsContainer>\n        {items.map(item => (\n          <CollectionItem key={item.id} item={item} />\n        ))}\n      </CollectionItemsContainer>\n    </CollectionPageContainer>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);\n"]},"metadata":{},"sourceType":"module"}