{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, covertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollection } from '../../redux/shop/shop.action';\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const updateCollectin = this.props.updateCollectin;\n    const collectionRef = firestore.collection('collections');\n    const collectionMap = collectionRef.onSnapshot(async snapshot => covertCollectionsSnapshotToMap(snapshot));\n    updateCollection(collectionMap);\n  }\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollectin: collectionMap => dispatch(updateCollection(collectionMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/xampp/htdocs/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","firestore","covertCollectionsSnapshotToMap","updateCollection","ShopPage","Component","unsubscribeFromAuth","componentDidMount","updateCollectin","props","collectionRef","collection","collectionMap","onSnapshot","snapshot","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,+BAA1D;AACA,SAASC,gBAAT,QAAiC,8BAAjC;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAsC;AAAA;AAAA;AAAA,SACpCC,mBADoC,GACd,IADc;AAAA;;AAGpCC,EAAAA,iBAAiB,GAAE;AAAA,UACVC,eADU,GACS,KAAKC,KADd,CACVD,eADU;AAEjB,UAAME,aAAa,GAAGT,SAAS,CAACU,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,aAAa,GAAGF,aAAa,CAACG,UAAd,CAAyB,MAAMC,QAAN,IAAkBZ,8BAA8B,CAACY,QAAD,CAAzE,CAAtB;AACAX,IAAAA,gBAAgB,CAACS,aAAD,CAAhB;AACD;;AAEDG,EAAAA,MAAM,GAAE;AAAA,UACCC,KADD,GACU,KAAKP,KADf,CACCO,KADD;AAEN,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEA,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAElB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEiB,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAEjB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADF;AAMD;;AAlBmC;;AAqBtC,MAAMkB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCX,EAAAA,eAAe,EAAEI,aAAa,IAAIO,QAAQ,CAAChB,gBAAgB,CAACS,aAAD,CAAjB;AADJ,CAAL,CAAnC;;AAIA,eAAed,OAAO,CAAC,IAAD,EAAOoB,kBAAP,CAAP,CAAkCd,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\n\nimport { firestore, covertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollection } from '../../redux/shop/shop.action';\n\nclass ShopPage extends React.Component{\n  unsubscribeFromAuth = null;\n\n  componentDidMount(){\n    const {updateCollectin} = this.props;\n    const collectionRef = firestore.collection('collections');\n    const collectionMap = collectionRef.onSnapshot(async snapshot => covertCollectionsSnapshotToMap(snapshot));\n    updateCollection(collectionMap);\n  }\n  \n  render(){\n    const {match} = this.props;\n    return (\n      <div className='shop-page'>\n      <Route exact path={`${match.path}`} component={CollectionsOverview} />\n      <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n    </div>\n    )\n  }\n} \n\nconst mapDispatchToProps = dispatch => ({\n  updateCollectin: collectionMap => dispatch(updateCollection(collectionMap))\n})\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}