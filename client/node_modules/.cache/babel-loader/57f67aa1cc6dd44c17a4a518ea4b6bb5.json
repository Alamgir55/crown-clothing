{"ast":null,"code":"import _objectSpread from \"C:\\\\xampp\\\\htdocs\\\\crwn-clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, all, call, put } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleSignInSuccess, gooogleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    yield put(googleSignInSuccess(_objectSpread({\n      id: userSnapShot.id\n    }, userSnapShot.data())));\n  } catch (error) {\n    yield put(gooogleSignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    yield put(emailSignInSuccess(_objectSpread({\n      id: userSnapShot.id\n    }, userSnapShot.data())));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)], call(onEmailSignInStart));\n}","map":{"version":3,"sources":["C:/xampp/htdocs/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","all","call","put","UserActionTypes","googleSignInSuccess","gooogleSignInFailure","emailSignInSuccess","emailSignInFailure","auth","googleProvider","createUserProfileDocument","signInWithGoogle","signInWithPopup","user","userRef","userSnapShot","get","id","data","error","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":";AAAA,SAASA,UAAT,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiCC,GAAjC,QAA4C,oBAA5C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,mBAAR,EAA6BC,oBAA7B,EAAmDC,kBAAnD,EAAuEC,kBAAvE,QAAgG,gBAAhG;AAEA,SAAQC,IAAR,EAAcC,cAAd,EAA8BC,yBAA9B,QAA8D,+BAA9D;AAEA,OAAO,UAAUC,gBAAV,GAA4B;AAC/B,MAAG;AAAA,iBACkB,MAAMH,IAAI,CAACI,eAAL,CAAqBH,cAArB,CADxB;AAAA,UACSI,IADT,QACSA,IADT;;AAEC,UAAMC,OAAO,GAAG,MAAMb,IAAI,CAACS,yBAAD,EAA4BG,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CACLE,mBAAmB;AAAEa,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAAnB,OAA0BF,YAAY,CAACG,IAAb,EAA1B,EADd,CAAT;AAGH,GAPD,CAOC,OAAMC,KAAN,EAAY;AACT,UAAMjB,GAAG,CAACG,oBAAoB,CAACc,KAAD,CAArB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA1B,EAAuD;AAC1D,MAAG;AAAA,kBACiB,MAAMf,IAAI,CAACgB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CADvB;AAAA,UACQV,IADR,SACQA,IADR;;AAEA,UAAMC,OAAO,GAAG,MAAMb,IAAI,CAACS,yBAAD,EAA4BG,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACC,UAAMd,GAAG,CAACI,kBAAkB;AAAEW,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAAnB,OAA0BF,YAAY,CAACG,IAAb,EAA1B,EAAnB,CAAT;AACH,GALD,CAKC,OAAMC,KAAN,EAAY;AACT,UAAMjB,GAAG,CAACK,kBAAkB,CAACY,KAAD,CAAnB,CAAT;AACH;AACJ;AAED,OAAO,UAAUM,mBAAV,GAA+B;AACnC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,oBAAjB,EAAuCf,gBAAvC,CAAhB;AACF;AAED,OAAO,UAAUgB,kBAAV,GAA8B;AACjC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,mBAAjB,EAAsCR,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUS,SAAV,GAAqB;AACxB,QAAM7B,GAAG,CAAC,CAACC,IAAI,CAACwB,mBAAD,CAAL,CAAD,EAA8BxB,IAAI,CAAC0B,kBAAD,CAAlC,CAAT;AACH","sourcesContent":["import { takeLatest,  all, call, put } from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from './user.types';\r\nimport {googleSignInSuccess, gooogleSignInFailure, emailSignInSuccess, emailSignInFailure} from './user.actions';\r\n\r\nimport {auth, googleProvider, createUserProfileDocument} from '../../firebase/firebase.utils';\r\n\r\nexport function* signInWithGoogle(){\r\n    try{\r\n        const { user } = yield auth.signInWithPopup(googleProvider);\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        const userSnapShot = yield userRef.get();\r\n        yield put(\r\n            googleSignInSuccess({id: userSnapShot.id, ...userSnapShot.data()})\r\n        );\r\n    }catch(error){\r\n        yield put(gooogleSignInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({payload: {email, password}}){\r\n    try{\r\n       const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n       const userRef = yield call(createUserProfileDocument, user);\r\n       const userSnapShot = yield userRef.get();\r\n        yield put(emailSignInSuccess({id: userSnapShot.id, ...userSnapShot.data()}))\r\n    }catch(error){\r\n        yield put(emailSignInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart(){\r\n   yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart(){\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\n\r\nexport function* userSagas(){\r\n    yield all([call(onGoogleSignInStart)], call(onEmailSignInStart));\r\n}"]},"metadata":{},"sourceType":"module"}