{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\xampp\\\\htdocs\\\\crwn-clothing\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(clearCartOnSignOut),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(onSignOutSuccess),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(cartSagas);import{takeLatest,put,all,call}from'redux-saga/effects';import UserActionTypes from'../user/user.types';import{clearCart}from'./cart.actions';export function clearCartOnSignOut(){return _regeneratorRuntime.wrap(function clearCartOnSignOut$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return put(clearCart());case 2:case\"end\":return _context.stop();}}},_marked);}export function onSignOutSuccess(){return _regeneratorRuntime.wrap(function onSignOutSuccess$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeLatest(UserActionTypes.SIGN_OUT_START,clearCartOnSignOut);case 2:case\"end\":return _context2.stop();}}},_marked2);}export function cartSagas(){return _regeneratorRuntime.wrap(function cartSagas$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return all([call(onSignOutSuccess)]);case 2:case\"end\":return _context3.stop();}}},_marked3);}","map":{"version":3,"sources":["C:/xampp/htdocs/crwn-clothing/client/src/redux/cart/cart.sagas.js"],"names":["clearCartOnSignOut","onSignOutSuccess","cartSagas","takeLatest","put","all","call","UserActionTypes","clearCart","SIGN_OUT_START"],"mappings":"uKAKiBA,kB,iDAIAC,gB,iDAIAC,S,EAbjB,OAASC,UAAT,CAAqBC,GAArB,CAA0BC,GAA1B,CAA+BC,IAA/B,KAA2C,oBAA3C,CAEA,MAAQC,CAAAA,eAAR,KAA6B,oBAA7B,CACA,OAAQC,SAAR,KAAwB,gBAAxB,CAEA,MAAO,SAAUR,CAAAA,kBAAV,8IACH,MAAMI,CAAAA,GAAG,CAACI,SAAS,EAAV,CAAT,CADG,sDAIP,MAAO,SAAUP,CAAAA,gBAAV,gJACH,MAAME,CAAAA,UAAU,CAACI,eAAe,CAACE,cAAjB,CAAiCT,kBAAjC,CAAhB,CADG,wDAIP,MAAO,SAAUE,CAAAA,SAAV,yIACH,MAAMG,CAAAA,GAAG,CAAC,CAACC,IAAI,CAACL,gBAAD,CAAL,CAAD,CAAT,CADG","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\n\r\nimport  UserActionTypes from '../user/user.types';\r\nimport {clearCart} from './cart.actions';\r\n\r\nexport function* clearCartOnSignOut(){\r\n    yield put(clearCart());\r\n}   \r\n\r\nexport function* onSignOutSuccess(){\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, clearCartOnSignOut)\r\n}\r\n\r\nexport function* cartSagas(){\r\n    yield all([call(onSignOutSuccess)])\r\n}"]},"metadata":{},"sourceType":"module"}