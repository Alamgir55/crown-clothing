{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport collectionOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPageContainer from '../collection/collection.container';\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const fetchCollectionsStartAsync = this.props.fetchCollectionsStartAsync;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          selectIsCollectionsLoad = _this$props.selectIsCollectionsLoad;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: collectionOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPageContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProp = createStructuredSelector({});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProp, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/xampp/htdocs/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","createStructuredSelector","fetchCollectionsStartAsync","collectionOverviewContainer","CollectionPageContainer","ShopPage","Component","componentDidMount","props","render","match","selectIsCollectionsLoad","path","mapStateToProp","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,OAAOC,2BAAP,MAAwC,sEAAxC;AACA,OAAOC,uBAAP,MAAoC,oCAApC;;AAEA,MAAMC,QAAN,SAAuBP,KAAK,CAACQ,SAA7B,CAAsC;AAEpCC,EAAAA,iBAAiB,GAAE;AAAA,UACTL,0BADS,GACsB,KAAKM,KAD3B,CACTN,0BADS;AAEjBA,IAAAA,0BAA0B;AAC3B;;AAEDO,EAAAA,MAAM,GAAE;AAAA,wBACoC,KAAKD,KADzC;AAAA,UACEE,KADF,eACEA,KADF;AAAA,UACQC,uBADR,eACQA,uBADR;AAEN,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAET,2BAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEO,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAER,uBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADF;AAMD;;AAfmC;;AAkBtC,MAAMS,cAAc,GAAGZ,wBAAwB,CAAC,EAAD,CAA/C;;AAIA,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACtCb,EAAAA,0BAA0B,EAAE,MAAMa,QAAQ,CAACb,0BAA0B,EAA3B;AADJ,CAAL,CAAnC;;AAIA,eAAeF,OAAO,CAACa,cAAD,EAAiBC,kBAAjB,CAAP,CAA4CT,QAA5C,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { createStructuredSelector } from 'reselect'\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport collectionOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPageContainer from '../collection/collection.container';\n\nclass ShopPage extends React.Component{\n \n  componentDidMount(){\n    const { fetchCollectionsStartAsync } = this.props;\n    fetchCollectionsStartAsync();\n  }\n  \n  render(){\n    const { match,selectIsCollectionsLoad } = this.props;\n    return (\n      <div className='shop-page'>\n      <Route exact path={`${match.path}`} component={collectionOverviewContainer}  />\n      <Route path={`${match.path}/:collectionId`} component={CollectionPageContainer} />\n    </div>\n    )\n  }\n} \n\nconst mapStateToProp = createStructuredSelector({\n  \n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n})\n\nexport default connect(mapStateToProp, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}