{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport { firestore, covertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFaliure } from './shop.actions';\nimport shopActionTypes from './shop.types';\nexport function* fetchCollectionAysc() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collections = yield call(covertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collections));\n  } catch (error) {\n    yield put(fetchCollectionsFaliure(error.message));\n  }\n}\nexport function* fetchCollectionStart() {\n  yield takeLatest(shopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAysc);\n}","map":{"version":3,"sources":["C:/xampp/htdocs/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","firestore","covertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFaliure","shopActionTypes","fetchCollectionAysc","collectionRef","collection","snapshot","get","collections","error","message","fetchCollectionStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AAEA,SAAQC,SAAR,EAAmBC,8BAAnB,QAAwD,+BAAxD;AACA,SACIC,uBADJ,EAEIC,uBAFJ,QAGO,gBAHP;AAIA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,mBAAV,GAA+B;AAElC,MAAG;AACC,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,WAAW,GAAG,MAAMZ,IAAI,CAACG,8BAAD,EAAiCO,QAAjC,CAA9B;AACA,UAAMT,GAAG,CAACG,uBAAuB,CAACQ,WAAD,CAAxB,CAAT;AACH,GALD,CAKC,OAAMC,KAAN,EAAY;AACT,UAAMZ,GAAG,CAACI,uBAAuB,CAACQ,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,oBAAV,GAAgC;AACnC,QAAMhB,UAAU,CAACO,eAAe,CAACU,uBAAjB,EAA0CT,mBAA1C,CAAhB;AACH","sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects';\r\n\r\nimport {firestore, covertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\r\nimport{\r\n    fetchCollectionsSuccess,\r\n    fetchCollectionsFaliure\r\n} from './shop.actions';\r\nimport shopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollectionAysc(){\r\n\r\n    try{\r\n        const collectionRef = firestore.collection('collections');\r\n        const snapshot = yield collectionRef.get();\r\n        const collections = yield call(covertCollectionsSnapshotToMap, snapshot);    \r\n        yield put(fetchCollectionsSuccess(collections))\r\n    }catch(error){\r\n        yield put(fetchCollectionsFaliure(error.message));\r\n    }\r\n}\r\n\r\nexport function* fetchCollectionStart(){\r\n    yield takeLatest(shopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAysc);\r\n}"]},"metadata":{},"sourceType":"module"}