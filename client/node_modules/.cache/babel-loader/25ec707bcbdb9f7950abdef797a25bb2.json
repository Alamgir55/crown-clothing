{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport withSpinner from '../../components/with-spinner/with-spinner.component';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectCollectionsFetching } from '../../redux/shop/shop.selectors';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const fetchCollectionsStartAsync = this.props.fetchCollectionsStartAsync;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionFetching = _this$props.isCollectionFetching;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProp = createStructuredSelector({\n  isCollectionFetching: selectCollectionsFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProp, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/xampp/htdocs/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","withSpinner","createStructuredSelector","fetchCollectionsStartAsync","selectCollectionsFetching","CollectionsOverview","CollectionPage","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","constructor","props","componentDidMount","render","match","isCollectionFetching","path","mapStateToProp","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAAQC,yBAAR,QAAwC,iCAAxC;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,MAAMC,8BAA8B,GAAGN,WAAW,CAACI,mBAAD,CAAlD;AACA,MAAMG,yBAAyB,GAAGP,WAAW,CAACK,cAAD,CAA7C;;AAGA,MAAMG,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAsC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AAED;;AACDC,EAAAA,iBAAiB,GAAE;AAAA,UACTV,0BADS,GACsB,KAAKS,KAD3B,CACTT,0BADS;AAEjBA,IAAAA,0BAA0B;AAC3B;;AAEDW,EAAAA,MAAM,GAAE;AAAA,wBACkC,KAAKF,KADvC;AAAA,UACEG,KADF,eACEA,KADF;AAAA,UACSC,oBADT,eACSA,oBADT;AAEN,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAEL,KAAK,IAAK,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEI;AAA3C,SAAqEJ,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEG,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAEL,KAAK,IAAK,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEI;AAAtC,SAAgEJ,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADF;AAMD;;AAlBmC;;AAqBtC,MAAMM,cAAc,GAAGhB,wBAAwB,CAAC;AAC9Cc,EAAAA,oBAAoB,EAAEZ;AADwB,CAAD,CAA/C;;AAIA,MAAMe,kBAAkB,GAAGC,QAAQ,KAAK;AACtCjB,EAAAA,0BAA0B,EAAE,MAAMiB,QAAQ,CAACjB,0BAA0B,EAA3B;AADJ,CAAL,CAAnC;;AAIA,eAAeH,OAAO,CAACkB,cAAD,EAAiBC,kBAAjB,CAAP,CAA4CV,QAA5C,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport withSpinner from '../../components/with-spinner/with-spinner.component';\nimport { createStructuredSelector } from 'reselect'\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport {selectCollectionsFetching} from '../../redux/shop/shop.selectors';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\n\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\n\n\nclass ShopPage extends React.Component{\n  constructor(props){\n    super(props);\n    \n  }\n  componentDidMount(){\n    const { fetchCollectionsStartAsync } = this.props;\n    fetchCollectionsStartAsync();\n  }\n  \n  render(){\n    const { match, isCollectionFetching } = this.props;\n    return (\n      <div className='shop-page'>\n      <Route exact path={`${match.path}`} render={props => (<CollectionsOverviewWithSpinner isLoading={isCollectionFetching} {...props}/>) } />\n      <Route path={`${match.path}/:collectionId`} render={props => (<CollectionPageWithSpinner isLoading={isCollectionFetching} {...props} />) } />\n    </div>\n    )\n  }\n} \n\nconst mapStateToProp = createStructuredSelector({\n  isCollectionFetching: selectCollectionsFetching\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n})\n\nexport default connect(mapStateToProp, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}