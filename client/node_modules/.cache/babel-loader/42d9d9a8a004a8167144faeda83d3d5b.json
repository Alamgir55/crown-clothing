{"ast":null,"code":"import shopActionTypes from'./shop.types';import{firestore,covertCollectionsSnapshotToMap}from'../../firebase/firebase.utils';export var fetchCollectionsStart=function fetchCollectionsStart(){return{type:shopActionTypes.FETCH_COLLECTIONS_START};};export var fetchCollectionsSuccess=function fetchCollectionsSuccess(collectionsMap){return{type:shopActionTypes.FETCH_COLLECTIONS_SUCCESS,payload:collectionsMap};};export var fetchCollectionsFaliure=function fetchCollectionsFaliure(errorMessage){return{type:shopActionTypes.FETCH_COLLECTIONS_FAILURE,payload:errorMessage};};export var fetchCollectionsStartAsync=function fetchCollectionsStartAsync(){return function(dispatch){var collectionRef=firestore.collection('collections');dispatch(fetchCollectionsStart());collectionRef.get().then(function(snapshot){var collectionsMap=covertCollectionsSnapshotToMap(snapshot);dispatch(fetchCollectionsSuccess(collectionsMap));}).catch(function(error){return dispatch(fetchCollectionsFaliure(error.message));});};};","map":{"version":3,"sources":["C:/xampp/htdocs/crwn-clothing/client/src/redux/shop/shop.actions.js"],"names":["shopActionTypes","firestore","covertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFaliure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,MAAOA,CAAAA,eAAP,KAA4B,cAA5B,CAEA,OAASC,SAAT,CAAoBC,8BAApB,KAA0D,+BAA1D,CAEA,MAAO,IAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,SAAO,CACxCC,IAAI,CAAEJ,eAAe,CAACK,uBADkB,CAAP,EAA9B,CAGP,MAAO,IAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACC,cAAD,QAAoB,CACvDH,IAAI,CAAEJ,eAAe,CAACQ,yBADiC,CAEvDC,OAAO,CAAEF,cAF8C,CAApB,EAAhC,CAKP,MAAO,IAAMG,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAAAC,YAAY,QAAK,CACpDP,IAAI,CAAEJ,eAAe,CAACY,yBAD8B,CAEpDH,OAAO,CAAEE,YAF2C,CAAL,EAA5C,CAKP,MAAO,IAAME,CAAAA,0BAA0B,CAAG,QAA7BA,CAAAA,0BAA6B,EAAU,CAChD,MAAO,UAAAC,QAAQ,CAAI,CACf,GAAMC,CAAAA,aAAa,CAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB,CACAF,QAAQ,CAACX,qBAAqB,EAAtB,CAAR,CAEJY,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyB,SAAAC,QAAQ,CAAI,CACnC,GAAMZ,CAAAA,cAAc,CAAGL,8BAA8B,CAACiB,QAAD,CAArD,CACEL,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR,CACH,CAHD,EAGGa,KAHH,CAGS,SAAAC,KAAK,QAAIP,CAAAA,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAAZ,EAHd,EAIC,CARD,CASH,CAVM","sourcesContent":["import shopActionTypes from './shop.types';\r\n\r\nimport { firestore, covertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n    type: shopActionTypes.FETCH_COLLECTIONS_START\r\n})\r\nexport const fetchCollectionsSuccess = (collectionsMap) =>({ \r\n    type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n    payload: collectionsMap \r\n})\r\n\r\nexport const fetchCollectionsFaliure = errorMessage => ({\r\n    type: shopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n    payload: errorMessage\r\n})\r\n\r\nexport const fetchCollectionsStartAsync = function(){\r\n    return dispatch => {\r\n        const collectionRef = firestore.collection('collections');\r\n        dispatch(fetchCollectionsStart());\r\n\r\n    collectionRef.get().then(snapshot => {\r\n      const collectionsMap = covertCollectionsSnapshotToMap(snapshot)\r\n        dispatch(fetchCollectionsSuccess(collectionsMap));\r\n    }).catch(error => dispatch(fetchCollectionsFaliure(error.message)));\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}