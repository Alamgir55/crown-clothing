{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, covertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFaliure } from './shop.actions';\nimport shopActionTypes from './shop.types';\nexport function* fetchCollectionAysc() {\n  yield console.log('I am fired');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collections = yield call(covertCollectionsSnapshotToMap, snapshot);\n    put(fetchCollectionsSuccess(collections));\n  } catch (error) {\n    put(fetchCollectionsFaliure(error.message));\n  } // collectionRef.get().then(snapshot => {\n  //   const collectionsMap = covertCollectionsSnapshotToMap(snapshot)\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  // }).catch(error => dispatch(fetchCollectionsFaliure(error.message)));\n\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(shopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAysc);\n}","map":{"version":3,"sources":["C:/xampp/htdocs/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","firestore","covertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFaliure","shopActionTypes","fetchCollectionAysc","console","log","collectionRef","collection","snapshot","get","collections","error","message","fetchCollectionStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AAEA,SAAQC,SAAR,EAAmBC,8BAAnB,QAAwD,+BAAxD;AACA,SACIC,uBADJ,EAEIC,uBAFJ,QAGO,gBAHP;AAIA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,mBAAV,GAA+B;AAClC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AAGA,MAAG;AACC,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,WAAW,GAAG,MAAMd,IAAI,CAACG,8BAAD,EAAiCS,QAAjC,CAA9B;AACAX,IAAAA,GAAG,CAACG,uBAAuB,CAACU,WAAD,CAAxB,CAAH;AACH,GALD,CAKC,OAAMC,KAAN,EAAY;AACTd,IAAAA,GAAG,CAACI,uBAAuB,CAACU,KAAK,CAACC,OAAP,CAAxB,CAAH;AACH,GAXiC,CAalC;AACA;AACA;AACA;;AAEH;AAED,OAAO,UAAUC,oBAAV,GAAgC;AACnC,QAAMlB,SAAS,CAACO,eAAe,CAACY,uBAAjB,EAA0CX,mBAA1C,CAAf;AACH","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects';\r\n\r\nimport {firestore, covertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\r\nimport{\r\n    fetchCollectionsSuccess,\r\n    fetchCollectionsFaliure\r\n} from './shop.actions';\r\nimport shopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollectionAysc(){\r\n    yield console.log('I am fired');\r\n\r\n\r\n    try{\r\n        const collectionRef = firestore.collection('collections');\r\n        const snapshot = yield collectionRef.get();\r\n        const collections = yield call(covertCollectionsSnapshotToMap, snapshot);    \r\n        put(fetchCollectionsSuccess(collections))\r\n    }catch(error){\r\n        put(fetchCollectionsFaliure(error.message));\r\n    }\r\n\r\n    // collectionRef.get().then(snapshot => {\r\n    //   const collectionsMap = covertCollectionsSnapshotToMap(snapshot)\r\n    //     dispatch(fetchCollectionsSuccess(collectionsMap));\r\n    // }).catch(error => dispatch(fetchCollectionsFaliure(error.message)));\r\n\r\n}\r\n\r\nexport function* fetchCollectionStart(){\r\n    yield takeEvery(shopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAysc);\r\n}"]},"metadata":{},"sourceType":"module"}